{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport PostRepository from '~/repositories/PostRepository';\n\nconst WidgetBlogRecentPosts = () => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(null);\n\n  async function getPosts() {\n    let queries, responseData;\n    queries = {\n      _limit: 4\n    };\n    responseData = await PostRepository.getPosts(queries);\n\n    if (responseData) {\n      setTimeout(function () {\n        setLoading(false);\n      }, 200);\n      setPosts(responseData);\n      return responseData;\n    } else {\n      setPosts(null);\n      return null;\n    }\n  }\n\n  useEffect(() => {\n    getPosts();\n  }, []); // Views\n\n  let postsView;\n\n  if (!loading) {\n    if (posts && posts.length > 0) {\n      postsView = posts.map(item => /*#__PURE__*/_jsx(Link, {\n        href: \"/post/[pid]\",\n        as: `/post/${item.id}`,\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: item.title\n        })\n      }));\n    }\n  } else {\n    postsView = /*#__PURE__*/_jsx(\"p\", {\n      children: \"Loading...\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(\"aside\", {\n    className: \"widget widget--blog widget--recent-post\",\n    children: [/*#__PURE__*/_jsx(\"h3\", {\n      className: \"widget__title\",\n      children: \"Recent Posts\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"widget__content\",\n      children: postsView\n    })]\n  });\n};\n\nexport default WidgetBlogRecentPosts;","map":null,"metadata":{},"sourceType":"module"}