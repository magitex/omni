{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Slider from 'react-slick';\nimport Lightbox from 'react-image-lightbox';\nimport { baseUrl } from '~/repositories/Repository';\nimport NextArrow from '~/components/elements/carousel/NextArrow';\nimport PrevArrow from '~/components/elements/carousel/PrevArrow';\n\nconst ThumbnailDefault = ({\n  product,\n  vertical = true\n}) => {\n  const galleryCarousel = useRef(null);\n  const variantCarousel = useRef(null);\n  const {\n    0: gallery,\n    1: setGallery\n  } = useState(null);\n  const {\n    0: variant,\n    1: setVariant\n  } = useState(null);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: photoIndex,\n    1: setPhotoIndex\n  } = useState(0);\n  const {\n    0: productImages,\n    1: setProductImages\n  } = useState([]);\n\n  const handleOpenLightbox = (e, imageIndex) => {\n    e.preventDefault();\n    setPhotoIndex(imageIndex);\n    setIsOpen(true);\n  };\n\n  useEffect(() => {\n    let images = [];\n\n    if (product && product.images.length > 0) {\n      product.images.map(item => {\n        images.push(`${baseUrl}${item.url}`);\n      });\n      setProductImages(images);\n    }\n\n    setGallery(galleryCarousel.current);\n    setVariant(variantCarousel.current);\n  }, [product]);\n  const gallerySetting = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    nextArrow: /*#__PURE__*/_jsx(NextArrow, {}),\n    prevArrow: /*#__PURE__*/_jsx(PrevArrow, {})\n  };\n  const variantSetting = {\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 4,\n        dots: false,\n        arrows: false,\n        vertical: false,\n        infinite: false\n      }\n    }, {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 4,\n        dots: false,\n        arrows: false,\n        vertical: false,\n        infinite: false\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 4,\n        dots: false,\n        arrows: false,\n        vertical: false,\n        infinite: false\n      }\n    }]\n  }; //Views\n\n  let lightboxView, variantCarouselView, imagesView, galleryImagesView;\n\n  if (productImages.length > 0) {\n    imagesView = productImages.map(item => /*#__PURE__*/_jsx(\"div\", {\n      className: \"item\",\n      children: /*#__PURE__*/_jsx(\"img\", {\n        src: item,\n        alt: item\n      })\n    }, item));\n    galleryImagesView = productImages.map((item, index) => /*#__PURE__*/_jsx(\"div\", {\n      className: \"item\",\n      children: /*#__PURE__*/_jsx(\"a\", {\n        href: \"#\",\n        onClick: e => handleOpenLightbox(e, index),\n        children: /*#__PURE__*/_jsx(\"img\", {\n          src: item,\n          alt: item\n        })\n      })\n    }, item));\n  }\n\n  if (vertical) {\n    variantCarouselView = /*#__PURE__*/_jsx(Slider, _objectSpread(_objectSpread({\n      asNavFor: gallery,\n      ref: slider => variantCarousel.current = slider,\n      swipeToSlide: true,\n      arrows: false,\n      slidesToShow: 3,\n      vertical: true,\n      infinite: true,\n      focusOnSelect: true\n    }, variantSetting), {}, {\n      className: \"ps-product__variants\",\n      children: imagesView\n    }));\n  } else {\n    variantCarouselView = /*#__PURE__*/_jsx(Slider, {\n      asNavFor: gallery,\n      ref: slider => variantCarousel.current = slider,\n      swipeToSlide: true,\n      arrows: false,\n      slidesToShow: 6,\n      vertical: false,\n      centered: true,\n      infinite: false,\n      focusOnSelect: true,\n      className: \"ps-product__variants\",\n      children: imagesView\n    });\n  }\n\n  if (isOpen) {\n    lightboxView = /*#__PURE__*/_jsx(Lightbox, {\n      mainSrc: productImages[photoIndex],\n      nextSrc: productImages[(photoIndex + 1) % productImages.length],\n      prevSrc: productImages[(photoIndex + productImages.length - 1) % productImages.length],\n      onCloseRequest: () => {\n        setIsOpen(false);\n      },\n      onMovePrevRequest: () => {\n        setPhotoIndex((photoIndex + productImages.length - 1) % productImages.length);\n      },\n      onMoveNextRequest: () => {\n        setPhotoIndex((photoIndex + 1) % productImages.length);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"ps-product__thumbnail\",\n    \"data-vertical\": vertical ? 'true' : 'false',\n    children: [/*#__PURE__*/_jsx(\"figure\", {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"ps-wrapper\",\n        children: /*#__PURE__*/_jsx(Slider, _objectSpread(_objectSpread({}, gallerySetting), {}, {\n          ref: slider => galleryCarousel.current = slider,\n          asNavFor: variant,\n          className: \"ps-product__gallery ps-carousel inside\",\n          children: galleryImagesView\n        }))\n      })\n    }), variantCarouselView, lightboxView]\n  });\n};\n\nexport default ThumbnailDefault;","map":null,"metadata":{},"sourceType":"module"}