{"ast":null,"code":"import Repository, { basePostUrl, serializeQuery } from './Repository';\n\nclass PostRepository {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  async getPosts(payload) {\n    const endPoint = `posts?${serializeQuery(payload)}`;\n    const reponse = await Repository.get(`${basePostUrl}/${endPoint}`).then(response => {\n      if (response.data.length > 0) {\n        return response.data;\n      } else {\n        return null;\n      }\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async getPostBySlug(payload) {\n    const reponse = await Repository.get(`${basePostUrl}/posts?slug=${payload}`).then(response => {\n      if (response.data.length > 0) {\n        return response.data[0];\n      } else {\n        return null;\n      }\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async getPostsByCollectionSlug(payload) {\n    const endPoint = `collections?${serializeQuery(payload)}`;\n    const reponse = await Repository.get(`${basePostUrl}/${endPoint}`).then(response => {\n      if (response.data && response.data[0].posts.length > 0) {\n        return response.data[0].posts;\n      } else {\n        return null;\n      }\n    }).catch(error => {\n      console.log(JSON.stringify(error));\n      return null;\n    });\n    return reponse;\n  }\n\n  async getPostItemsByKeyword(payload) {\n    const reponse = await Repository.get(`${basePostUrl}/posts?title_contains=${payload}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async getPostItemsByCategory(payload) {\n    const reponse = await Repository.get(`${basePostUrl}/posts?title_contains=${payload}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n}\n\nexport default new PostRepository();","map":null,"metadata":{},"sourceType":"module"}