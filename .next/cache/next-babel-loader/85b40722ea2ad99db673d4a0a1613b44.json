{"ast":null,"code":"import config from './config';\nimport axios from 'axios';\n\nvar qs = require('qs');\n\nconst serverUrl = config.baseUrl;\nif (localStorage.getItem('token') !== null) axios.defaults.headers.common['Authorization'] = localStorage.getItem('auth_type') + ' ' + localStorage.getItem('token');\nconst Network = {\n  getToken: async () => {\n    return new Promise((resolve, reject) => {\n      var data = qs.stringify({\n        grant_type: 'client_credentials'\n      });\n      axios({\n        url: serverUrl + config.auth,\n        method: 'post',\n        data: data,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Authorization: 'Basic ' + btoa('mobile:pin')\n        }\n      }).then(data => {\n        console.log('data');\n        return resolve(data); // localStorage.setItem()\n      }).catch(err => reject(err));\n    });\n  },\n  dashboardData: async () => {\n    var data = qs.stringify({\n      channelId: 1,\n      customerId: 1,\n      language: 'ENG',\n      userId: 2,\n      latitude: '22.54410489419337',\n      longitude: '88.35800126798115',\n      storeId: 1\n    });\n    return axios({\n      url: serverUrl + config.dashboardData,\n      method: 'post',\n      data: data,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded' // Authorization: 'Basic ' + btoa('mobile:pin'),\n\n      }\n    });\n  }\n};\nexport default Network;","map":{"version":3,"sources":["/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/components/helpers/networks.js"],"names":["config","axios","qs","require","serverUrl","baseUrl","localStorage","getItem","defaults","headers","common","Network","getToken","Promise","resolve","reject","data","stringify","grant_type","url","auth","method","Authorization","btoa","then","console","log","catch","err","dashboardData","channelId","customerId","language","userId","latitude","longitude","storeId"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,OAAzB;AACA,IAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EACIN,KAAK,CAACO,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IACIJ,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoC,GAApC,GAA0CD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAD9C;AAGJ,MAAMI,OAAO,GAAG;AACZC,EAAAA,QAAQ,EAAE,YAAY;AAClB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAIC,IAAI,GAAGd,EAAE,CAACe,SAAH,CAAa;AACpBC,QAAAA,UAAU,EAAE;AADQ,OAAb,CAAX;AAGAjB,MAAAA,KAAK,CAAC;AACFkB,QAAAA,GAAG,EAAEf,SAAS,GAAGJ,MAAM,CAACoB,IADtB;AAEFC,QAAAA,MAAM,EAAE,MAFN;AAGFL,QAAAA,IAAI,EAAEA,IAHJ;AAIFP,QAAAA,OAAO,EAAE;AACL,0BAAgB,mCADX;AAELa,UAAAA,aAAa,EAAE,WAAWC,IAAI,CAAC,YAAD;AAFzB;AAJP,OAAD,CAAL,CASKC,IATL,CASWR,IAAD,IAAU;AACZS,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,eAAOZ,OAAO,CAACE,IAAD,CAAd,CAFY,CAGZ;AACH,OAbL,EAcKW,KAdL,CAcYC,GAAD,IAASb,MAAM,CAACa,GAAD,CAd1B;AAeH,KAnBM,CAAP;AAoBH,GAtBW;AAuBZC,EAAAA,aAAa,EAAE,YAAY;AACvB,QAAIb,IAAI,GAAGd,EAAE,CAACe,SAAH,CAAa;AACpBa,MAAAA,SAAS,EAAE,CADS;AAEpBC,MAAAA,UAAU,EAAE,CAFQ;AAGpBC,MAAAA,QAAQ,EAAE,KAHU;AAIpBC,MAAAA,MAAM,EAAE,CAJY;AAKpBC,MAAAA,QAAQ,EAAE,mBALU;AAMpBC,MAAAA,SAAS,EAAE,mBANS;AAOpBC,MAAAA,OAAO,EAAE;AAPW,KAAb,CAAX;AASA,WAAOnC,KAAK,CAAC;AACTkB,MAAAA,GAAG,EAAEf,SAAS,GAAGJ,MAAM,CAAC6B,aADf;AAETR,MAAAA,MAAM,EAAE,MAFC;AAGTL,MAAAA,IAAI,EAAEA,IAHG;AAITP,MAAAA,OAAO,EAAE;AACL,wBAAgB,mCADX,CAEL;;AAFK;AAJA,KAAD,CAAZ;AASH;AA1CW,CAAhB;AA6CA,eAAeE,OAAf","sourcesContent":["import config from './config';\nimport axios from 'axios';\nvar qs = require('qs');\nconst serverUrl = config.baseUrl;\nif (localStorage.getItem('token') !== null)\n    axios.defaults.headers.common['Authorization'] =\n        localStorage.getItem('auth_type') + ' ' + localStorage.getItem('token');\n\nconst Network = {\n    getToken: async () => {\n        return new Promise((resolve, reject) => {\n            var data = qs.stringify({\n                grant_type: 'client_credentials',\n            });\n            axios({\n                url: serverUrl + config.auth,\n                method: 'post',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    Authorization: 'Basic ' + btoa('mobile:pin'),\n                },\n            })\n                .then((data) => {\n                    console.log('data');\n                    return resolve(data);\n                    // localStorage.setItem()\n                })\n                .catch((err) => reject(err));\n        });\n    },\n    dashboardData: async () => {\n        var data = qs.stringify({\n            channelId: 1,\n            customerId: 1,\n            language: 'ENG',\n            userId: 2,\n            latitude: '22.54410489419337',\n            longitude: '88.35800126798115',\n            storeId: 1,\n        });\n        return axios({\n            url: serverUrl + config.dashboardData,\n            method: 'post',\n            data: data,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                // Authorization: 'Basic ' + btoa('mobile:pin'),\n            },\n        });\n    },\n};\n\nexport default Network;\n"]},"metadata":{},"sourceType":"module"}