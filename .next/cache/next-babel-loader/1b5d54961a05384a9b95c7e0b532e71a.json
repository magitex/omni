{"ast":null,"code":"import _regeneratorRuntime from \"/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Repository, { baseUrl } from './Repository';\n\nvar CollectionRepository = /*#__PURE__*/function () {\n  function CollectionRepository() {\n    _classCallCheck(this, CollectionRepository);\n  }\n\n  _createClass(CollectionRepository, [{\n    key: \"getCollections\",\n    value: function () {\n      var _getCollections = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(payload) {\n        var query, reponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = '';\n                payload.forEach(function (item) {\n                  if (query === '') {\n                    query = \"slug_in=\".concat(item);\n                  } else {\n                    query = query + \"&slug_in=\".concat(item);\n                  }\n                });\n                _context.next = 4;\n                return Repository.get(\"\".concat(baseUrl, \"/collections?\").concat(query)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 4:\n                reponse = _context.sent;\n                return _context.abrupt(\"return\", reponse);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getCollections(_x) {\n        return _getCollections.apply(this, arguments);\n      }\n\n      return getCollections;\n    }()\n  }, {\n    key: \"getCategoriesBySlug\",\n    value: function () {\n      var _getCategoriesBySlug = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(payload) {\n        var query, reponse;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                query = '';\n                payload.forEach(function (item) {\n                  if (query === '') {\n                    query = \"slug_in=\".concat(item);\n                  } else {\n                    query = query + \"&slug_in=\".concat(item);\n                  }\n                });\n                _context2.next = 4;\n                return Repository.get(\"\".concat(baseUrl, \"/product-categories?\").concat(query)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 4:\n                reponse = _context2.sent;\n                return _context2.abrupt(\"return\", reponse);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getCategoriesBySlug(_x2) {\n        return _getCategoriesBySlug.apply(this, arguments);\n      }\n\n      return getCategoriesBySlug;\n    }()\n  }, {\n    key: \"getProductsByCollectionSlug\",\n    value: function () {\n      var _getProductsByCollectionSlug = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(slug) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/collections?slug_in=\").concat(slug)).then(function (response) {\n                  if (response.data && response.data.length > 0) {\n                    return {\n                      items: response.data[0].products\n                    };\n                  } else {\n                    return null;\n                  }\n\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  console.log(JSON.stringify(error));\n                  return null;\n                });\n\n              case 2:\n                reponse = _context3.sent;\n                return _context3.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getProductsByCollectionSlug(_x3) {\n        return _getProductsByCollectionSlug.apply(this, arguments);\n      }\n\n      return getProductsByCollectionSlug;\n    }()\n  }, {\n    key: \"getProductsByCategorySlug\",\n    value: function () {\n      var _getProductsByCategorySlug = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(slug) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/product-categories?slug_in=\").concat(slug)).then(function (response) {\n                  if (response.data && response.data.length > 0) {\n                    return {\n                      items: response.data[0].products\n                    };\n                  } else {\n                    return null;\n                  }\n\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  console.log(JSON.stringify(error));\n                  return null;\n                });\n\n              case 2:\n                reponse = _context4.sent;\n                return _context4.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getProductsByCategorySlug(_x4) {\n        return _getProductsByCategorySlug.apply(this, arguments);\n      }\n\n      return getProductsByCategorySlug;\n    }()\n  }]);\n\n  return CollectionRepository;\n}();\n\nexport default new CollectionRepository();","map":{"version":3,"sources":["/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/repositories/CollectionRepository.js"],"names":["Repository","baseUrl","CollectionRepository","payload","query","forEach","item","get","then","response","data","error","JSON","stringify","reponse","slug","length","items","products","console","log"],"mappings":"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","sourcesContent":["import Repository, { baseUrl } from './Repository';\n\nclass CollectionRepository {\n    async getCollections(payload) {\n        let query = '';\n        payload.forEach((item) => {\n            if (query === '') {\n                query = `slug_in=${item}`;\n            } else {\n                query = query + `&slug_in=${item}`;\n            }\n        });\n        const reponse = await Repository.get(`${baseUrl}/collections?${query}`)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((error) => ({ error: JSON.stringify(error) }));\n        return reponse;\n    }\n\n    async getCategoriesBySlug(payload) {\n        let query = '';\n        payload.forEach((item) => {\n            if (query === '') {\n                query = `slug_in=${item}`;\n            } else {\n                query = query + `&slug_in=${item}`;\n            }\n        });\n        const reponse = await Repository.get(\n            `${baseUrl}/product-categories?${query}`\n        )\n            .then((response) => {\n                return response.data;\n            })\n            .catch((error) => ({ error: JSON.stringify(error) }));\n        return reponse;\n    }\n\n    async getProductsByCollectionSlug(slug) {\n        const reponse = await Repository.get(\n            `${baseUrl}/collections?slug_in=${slug}`\n        )\n            .then((response) => {\n                if (response.data && response.data.length > 0) {\n                    return { items: response.data[0].products };\n                } else {\n                    return null;\n                }\n                return response.data;\n            })\n            .catch((error) => {\n                console.log(JSON.stringify(error));\n                return null;\n            });\n        return reponse;\n    }\n\n    async getProductsByCategorySlug(slug) {\n        const reponse = await Repository.get(\n            `${baseUrl}/product-categories?slug_in=${slug}`\n        )\n            .then((response) => {\n                if (response.data && response.data.length > 0) {\n                    return { items: response.data[0].products };\n                } else {\n                    return null;\n                }\n                return response.data;\n            })\n            .catch((error) => {\n                console.log(JSON.stringify(error));\n                return null;\n            });\n        return reponse;\n    }\n}\n\nexport default new CollectionRepository();\n"]},"metadata":{},"sourceType":"module"}