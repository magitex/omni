{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Menu } from 'antd';\nimport { menuPrimary } from '../../../public/static/data/menu';\nimport Link from 'next/link';\nconst {\n  SubMenu\n} = Menu;\n\nclass PanelMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"rootSubmenuKeys\", ['sub1', 'sub2', 'sub4']);\n\n    _defineProperty(this, \"state\", {\n      openKeys: []\n    });\n\n    _defineProperty(this, \"onOpenChange\", openKeys => {\n      const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\n\n      if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n        this.setState({\n          openKeys\n        });\n      } else {\n        this.setState({\n          openKeys: latestOpenKey ? [latestOpenKey] : []\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(Menu, {\n      mode: \"inline\",\n      openKeys: this.state.openKeys,\n      onOpenChange: this.onOpenChange,\n      className: \"menu--mobile-2\",\n      children: menuPrimary.menu_1.map(item => {\n        if (item.subMenu) {\n          return /*#__PURE__*/_jsx(SubMenu, {\n            title: /*#__PURE__*/_jsx(Link, {\n              href: item.url,\n              children: /*#__PURE__*/_jsx(\"a\", {\n                children: item.text\n              })\n            }),\n            children: item.subMenu.map(subItem => /*#__PURE__*/_jsx(Menu.Item, {\n              children: /*#__PURE__*/_jsx(Link, {\n                href: subItem.url,\n                children: /*#__PURE__*/_jsx(\"a\", {\n                  children: subItem.text\n                })\n              })\n            }, subItem.text))\n          }, item.text);\n        } else if (item.megaContent) {\n          return /*#__PURE__*/_jsx(SubMenu, {\n            title: /*#__PURE__*/_jsx(Link, {\n              href: item.url,\n              children: /*#__PURE__*/_jsx(\"a\", {\n                children: item.text\n              })\n            }),\n            children: item.megaContent.map(megaItem => /*#__PURE__*/_jsx(SubMenu, {\n              title: /*#__PURE__*/_jsx(\"span\", {\n                children: megaItem.heading\n              }),\n              children: megaItem.megaItems.map(megaSubItem => /*#__PURE__*/_jsx(Menu.Item, {\n                children: /*#__PURE__*/_jsx(Link, {\n                  href: item.url,\n                  children: /*#__PURE__*/_jsx(\"a\", {\n                    children: megaSubItem.text\n                  })\n                })\n              }, megaSubItem.text))\n            }, megaItem.heading))\n          }, item.text);\n        } else {\n          return /*#__PURE__*/_jsx(Menu.Item, {\n            children: item.type === 'dynamic' ? /*#__PURE__*/_jsxs(Link, {\n              href: `${item.url}/[pid]`,\n              as: `${item.url}/${item.endPoint}`,\n              children: [\"l\", /*#__PURE__*/_jsx(\"a\", {\n                children: item.text\n              })]\n            }) : /*#__PURE__*/_jsx(Link, {\n              href: item.url,\n              as: item.alias,\n              children: /*#__PURE__*/_jsx(\"a\", {\n                children: item.text\n              })\n            })\n          }, item.text);\n        }\n      })\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state.setting;\n};\n\nexport default connect(mapStateToProps)(PanelMenu);","map":null,"metadata":{},"sourceType":"module"}