{"ast":null,"code":"import Repository, { baseUrl } from './Repository';\nimport { convertSlugsQueryString } from '../utilities/product-helper';\n\nclass MediaRespository {\n  async getBannersBySlugs(payload) {\n    let query = '';\n    payload.forEach(item => {\n      if (query === '') {\n        query = `slug_in=${item}`;\n      } else {\n        query = query + `&slug_in=${item}`;\n      }\n    });\n    const reponse = await Repository.get(`${baseUrl}/banners?${query}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async getBannersBySlug(payload) {\n    const endPoint = `banners?slug_in=${payload}`;\n    const reponse = await Repository.get(`${baseUrl}/${endPoint}`).then(response => {\n      if (response.data) {\n        return response.data[0].items;\n      } else {\n        return null;\n      }\n    }).catch(error => {\n      console.log(JSON.stringify(error));\n      return null;\n    });\n    return reponse;\n  }\n\n  async getPromotionsBySlug(payload) {\n    const endPoint = `promotions?slug_in=${payload}`;\n    const reponse = await Repository.get(`${baseUrl}/${endPoint}`).then(response => {\n      if (response.data) {\n        return response.data[0].items;\n      } else {\n        return null;\n      }\n    }).catch(error => {\n      console.log(JSON.stringify(error));\n      return null;\n    });\n    return reponse;\n  }\n\n  async getPromotionsBySlugs(payload) {\n    const query = convertSlugsQueryString(payload);\n    const reponse = await Repository.get(`${baseUrl}/promotions?${query}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n}\n\nexport default new MediaRespository();","map":null,"metadata":{},"sourceType":"module"}