{"ast":null,"code":"import _regeneratorRuntime from \"/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport config from './config';\nimport axios from 'axios';\n\nvar qs = require('qs');\n\nvar serverUrl = config.baseUrl;\nvar Network = {\n  getToken: function () {\n    var _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var data = qs.stringify({\n                  grant_type: 'client_credentials'\n                });\n                axios({\n                  url: serverUrl + config.auth,\n                  method: 'post',\n                  data: data,\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    Authorization: 'Basic ' + btoa('mobile:pin')\n                  }\n                }).then(function (data) {\n                  console.log('data');\n                  return resolve(data); // localStorage.setItem()\n                })[\"catch\"](function (err) {\n                  return reject(err);\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getToken() {\n      return _getToken.apply(this, arguments);\n    }\n\n    return getToken;\n  }(),\n  dashboardData: function () {\n    var _dashboardData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = qs.stringify({\n                channelId: 1,\n                customerId: 1,\n                language: 'ENG',\n                userId: 2,\n                latitude: '22.54410489419337',\n                longitude: '88.35800126798115',\n                storeId: 1\n              });\n              return _context2.abrupt(\"return\", axios({\n                url: serverUrl + config.dashboardData,\n                method: 'post',\n                data: data,\n                headers: {\n                  'Content-Type': 'application/x-www-form-urlencoded' // Authorization: 'Basic ' + btoa('mobile:pin'),\n\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function dashboardData() {\n      return _dashboardData.apply(this, arguments);\n    }\n\n    return dashboardData;\n  }()\n};\nexport default Network;","map":{"version":3,"sources":["/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/components/helpers/networks.js"],"names":["config","axios","qs","require","serverUrl","baseUrl","Network","getToken","Promise","resolve","reject","data","stringify","grant_type","url","auth","method","headers","Authorization","btoa","then","console","log","err","dashboardData","channelId","customerId","language","userId","latitude","longitude","storeId"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAMC,SAAS,GAAGJ,MAAM,CAACK,OAAzB;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,QAAQ;AAAA,6EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,+CACC,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,IAAI,GAAGT,EAAE,CAACU,SAAH,CAAa;AACpBC,kBAAAA,UAAU,EAAE;AADQ,iBAAb,CAAX;AAGAZ,gBAAAA,KAAK,CAAC;AACFa,kBAAAA,GAAG,EAAEV,SAAS,GAAGJ,MAAM,CAACe,IADtB;AAEFC,kBAAAA,MAAM,EAAE,MAFN;AAGFL,kBAAAA,IAAI,EAAEA,IAHJ;AAIFM,kBAAAA,OAAO,EAAE;AACL,oCAAgB,mCADX;AAELC,oBAAAA,aAAa,EAAE,WAAWC,IAAI,CAAC,YAAD;AAFzB;AAJP,iBAAD,CAAL,CASKC,IATL,CASU,UAACT,IAAD,EAAU;AACZU,kBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,yBAAOb,OAAO,CAACE,IAAD,CAAd,CAFY,CAGZ;AACH,iBAbL,WAcW,UAACY,GAAD;AAAA,yBAASb,MAAM,CAACa,GAAD,CAAf;AAAA,iBAdX;AAeH,eAnBM,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADI;AAuBZC,EAAAA,aAAa;AAAA,kFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACPb,cAAAA,IADO,GACAT,EAAE,CAACU,SAAH,CAAa;AACpBa,gBAAAA,SAAS,EAAE,CADS;AAEpBC,gBAAAA,UAAU,EAAE,CAFQ;AAGpBC,gBAAAA,QAAQ,EAAE,KAHU;AAIpBC,gBAAAA,MAAM,EAAE,CAJY;AAKpBC,gBAAAA,QAAQ,EAAE,mBALU;AAMpBC,gBAAAA,SAAS,EAAE,mBANS;AAOpBC,gBAAAA,OAAO,EAAE;AAPW,eAAb,CADA;AAAA,gDAUJ9B,KAAK,CAAC;AACTa,gBAAAA,GAAG,EAAEV,SAAS,GAAGJ,MAAM,CAACwB,aADf;AAETR,gBAAAA,MAAM,EAAE,MAFC;AAGTL,gBAAAA,IAAI,EAAEA,IAHG;AAITM,gBAAAA,OAAO,EAAE;AACL,kCAAgB,mCADX,CAEL;;AAFK;AAJA,eAAD,CAVD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAvBD,CAAhB;AA6CA,eAAeX,OAAf","sourcesContent":["import config from './config';\nimport axios from 'axios';\nvar qs = require('qs');\nconst serverUrl = config.baseUrl;\n\nconst Network = {\n    getToken: async () => {\n        return new Promise((resolve, reject) => {\n            var data = qs.stringify({\n                grant_type: 'client_credentials',\n            });\n            axios({\n                url: serverUrl + config.auth,\n                method: 'post',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    Authorization: 'Basic ' + btoa('mobile:pin'),\n                },\n            })\n                .then((data) => {\n                    console.log('data');\n                    return resolve(data);\n                    // localStorage.setItem()\n                })\n                .catch((err) => reject(err));\n        });\n    },\n    dashboardData: async () => {\n        var data = qs.stringify({\n            channelId: 1,\n            customerId: 1,\n            language: 'ENG',\n            userId: 2,\n            latitude: '22.54410489419337',\n            longitude: '88.35800126798115',\n            storeId: 1,\n        });\n        return axios({\n            url: serverUrl + config.dashboardData,\n            method: 'post',\n            data: data,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                // Authorization: 'Basic ' + btoa('mobile:pin'),\n            },\n        });\n    },\n};\n\nexport default Network;\n"]},"metadata":{},"sourceType":"module"}