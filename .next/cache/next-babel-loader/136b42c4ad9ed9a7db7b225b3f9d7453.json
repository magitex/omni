{"ast":null,"code":"import _regeneratorRuntime from \"/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport config from './config';\nimport axios from 'axios';\n\nvar qs = require('qs');\n\nvar serverUrl = config.baseUrl;\nif (true) if (window.localStorage.getItem('token') !== null) {\n  axios.defaults.headers.common['Authorization'] = localStorage.getItem('token_type') + ' ' + localStorage.getItem('token');\n  axios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n}\nvar Network = {\n  getToken: function () {\n    var _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var data = qs.stringify({\n                  grant_type: 'client_credentials'\n                });\n                axios({\n                  url: serverUrl + config.auth,\n                  method: 'post',\n                  data: data,\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    Authorization: 'Basic ' + btoa('mobile:pin')\n                  }\n                }).then(function (data) {\n                  console.log('data', data.data);\n                  var authData = data.data;\n                  localStorage.setItem('token', authData.access_token);\n                  localStorage.setItem('token_type', authData.token_type);\n                  axios.defaults.headers.common['Authorization'] = localStorage.getItem('token_type') + ' ' + localStorage.getItem('token');\n                  axios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n                  return resolve(data); // localStorage.setItem()\n                })[\"catch\"](function (err) {\n                  return reject(err);\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getToken() {\n      return _getToken.apply(this, arguments);\n    }\n\n    return getToken;\n  }(),\n  dashboardData: function () {\n    var _dashboardData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var data = {\n                  channelId: 1,\n                  customerId: 1,\n                  language: 'ENG',\n                  userId: 2,\n                  latitude: '22.54410489419337',\n                  longitude: '88.35800126798115',\n                  storeId: 1\n                };\n                axios({\n                  url: serverUrl + config.dashboardData,\n                  method: 'post',\n                  data: data // headers: {\n                  //     'Content-Type': 'application/x-www-form-urlencoded',\n                  //     // Authorization: 'Basic ' + btoa('mobile:pin'),\n                  // },\n\n                }).then(function (data) {\n                  resolve(data);\n                })[\"catch\"](function (err) {\n                  return reject(err);\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function dashboardData() {\n      return _dashboardData.apply(this, arguments);\n    }\n\n    return dashboardData;\n  }()\n};\nexport default Network;","map":null,"metadata":{},"sourceType":"module"}