{"ast":null,"code":"import _regeneratorRuntime from \"/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sagnik/pro/_t/themeforest-eupsXMaK-martfury-multipurpose-marketplace-react-ecommerce-template(1)/martfury_react_package_2_1_0/martfury-react-2.1.0/martfury-react-2.1.0/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Repository, { baseUrl, serializeQuery } from './Repository';\n\nvar ProductRepository = /*#__PURE__*/function () {\n  function ProductRepository() {\n    _classCallCheck(this, ProductRepository);\n  }\n\n  _createClass(ProductRepository, [{\n    key: \"getRecords\",\n    value: function () {\n      var _getRecords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/products?\").concat(serializeQuery(params))).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context.sent;\n                return _context.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getRecords(_x) {\n        return _getRecords.apply(this, arguments);\n      }\n\n      return getRecords;\n    }()\n  }, {\n    key: \"getProducts\",\n    value: function () {\n      var _getProducts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/products?\").concat(serializeQuery(params))).then(function (response) {\n                  return {\n                    items: response.data,\n                    totalItems: response.data.length\n                  };\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context2.sent;\n                return _context2.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getProducts(_x2) {\n        return _getProducts.apply(this, arguments);\n      }\n\n      return getProducts;\n    }()\n  }, {\n    key: \"getBrands\",\n    value: function () {\n      var _getBrands = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/brands\")).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context3.sent;\n                return _context3.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getBrands() {\n        return _getBrands.apply(this, arguments);\n      }\n\n      return getBrands;\n    }()\n  }, {\n    key: \"getProductCategories\",\n    value: function () {\n      var _getProductCategories = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/product-categories\")).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context4.sent;\n                return _context4.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getProductCategories() {\n        return _getProductCategories.apply(this, arguments);\n      }\n\n      return getProductCategories;\n    }()\n  }, {\n    key: \"getTotalRecords\",\n    value: function () {\n      var _getTotalRecords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/products/count\")).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context5.sent;\n                return _context5.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getTotalRecords() {\n        return _getTotalRecords.apply(this, arguments);\n      }\n\n      return getTotalRecords;\n    }()\n  }, {\n    key: \"getProductsById\",\n    value: function () {\n      var _getProductsById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/products/\").concat(payload)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context6.sent;\n                return _context6.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getProductsById(_x3) {\n        return _getProductsById.apply(this, arguments);\n      }\n\n      return getProductsById;\n    }()\n  }, {\n    key: \"getProductsByCategory\",\n    value: function () {\n      var _getProductsByCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/product-categories?slug=\").concat(payload)).then(function (response) {\n                  if (response.data) {\n                    if (response.data.length > 0) {\n                      return response.data[0];\n                    }\n                  } else {\n                    return null;\n                  }\n                })[\"catch\"](function () {\n                  return null;\n                });\n\n              case 2:\n                reponse = _context7.sent;\n                return _context7.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function getProductsByCategory(_x4) {\n        return _getProductsByCategory.apply(this, arguments);\n      }\n\n      return getProductsByCategory;\n    }()\n  }, {\n    key: \"getProductsByBrand\",\n    value: function () {\n      var _getProductsByBrand = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/brands?slug=\").concat(payload)).then(function (response) {\n                  if (response.data) {\n                    if (response.data.length > 0) {\n                      return response.data[0];\n                    }\n                  } else {\n                    return null;\n                  }\n                })[\"catch\"](function () {\n                  return null;\n                });\n\n              case 2:\n                reponse = _context8.sent;\n                return _context8.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function getProductsByBrand(_x5) {\n        return _getProductsByBrand.apply(this, arguments);\n      }\n\n      return getProductsByBrand;\n    }()\n  }, {\n    key: \"getProductsByBrands\",\n    value: function () {\n      var _getProductsByBrands = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(payload) {\n        var query, reponse;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                query = '';\n                payload.forEach(function (item) {\n                  if (query === '') {\n                    query = \"id_in=\".concat(item);\n                  } else {\n                    query = query + \"&id_in=\".concat(item);\n                  }\n                });\n                _context9.next = 4;\n                return Repository.get(\"\".concat(baseUrl, \"/brands?\").concat(query)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 4:\n                reponse = _context9.sent;\n                return _context9.abrupt(\"return\", reponse);\n\n              case 6:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function getProductsByBrands(_x6) {\n        return _getProductsByBrands.apply(this, arguments);\n      }\n\n      return getProductsByBrands;\n    }()\n  }, {\n    key: \"getProductsByBrands\",\n    value: function () {\n      var _getProductsByBrands2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(payload) {\n        var query, reponse;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                query = '';\n                payload.forEach(function (item) {\n                  if (query === '') {\n                    query = \"id_in=\".concat(item);\n                  } else {\n                    query = query + \"&id_in=\".concat(item);\n                  }\n                });\n                _context10.next = 4;\n                return Repository.get(\"\".concat(baseUrl, \"/brands?\").concat(query)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 4:\n                reponse = _context10.sent;\n                return _context10.abrupt(\"return\", reponse);\n\n              case 6:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      function getProductsByBrands(_x7) {\n        return _getProductsByBrands2.apply(this, arguments);\n      }\n\n      return getProductsByBrands;\n    }()\n  }, {\n    key: \"getProductsByPriceRange\",\n    value: function () {\n      var _getProductsByPriceRange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/products?\").concat(serializeQuery(payload))).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context11.sent;\n                return _context11.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function getProductsByPriceRange(_x8) {\n        return _getProductsByPriceRange.apply(this, arguments);\n      }\n\n      return getProductsByPriceRange;\n    }()\n  }]);\n\n  return ProductRepository;\n}();\n\nexport default new ProductRepository();","map":null,"metadata":{},"sourceType":"module"}