{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport ProductRepository from '~/repositories/ProductRepository';\nimport Product from '~/components/elements/products/Product';\nimport SkeletonProduct from '~/components/elements/skeletons/SkeletonProduct';\nimport CollectionRepository from '~/repositories/CollectionRepository';\nimport { generateTempArray } from '~/utilities/common-helpers';\n\nconst ProductGroupGridItems = ({\n  collectionSlug,\n  columns = 3,\n  pageSize = 12\n}) => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: productItems,\n    1: setProductItems\n  } = useState(null);\n  const {\n    0: classes,\n    1: setClasses\n  } = useState('col-xl-4 col-lg-4 col-md-3 col-sm-6 col-6');\n\n  async function getProduct() {\n    let queries, SPProducts;\n\n    if (collectionSlug !== undefined) {\n      SPProducts = await CollectionRepository.getProductsByCollectionSlug(collectionSlug);\n    } else {\n      queries = {\n        _limit: pageSize\n      };\n      SPProducts = await ProductRepository.getProducts(queries);\n    }\n\n    if (SPProducts) {\n      setTimeout(function () {\n        setLoading(false);\n      }, 200);\n\n      if (SPProducts.items.length > 0) {\n        setProductItems(SPProducts.items);\n      }\n\n      return SPProducts;\n    } else {\n      setProductItems(null);\n      return null;\n    }\n  }\n\n  function handleSetColumns() {\n    switch (columns) {\n      case 2:\n        setClasses('col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6');\n        return 3;\n        break;\n\n      case 4:\n        setClasses('col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6');\n        return 4;\n        break;\n\n      case 6:\n        setClasses('col-xl-2 col-lg-4 col-md-6 col-sm-6 col-6');\n        return 6;\n        break;\n\n      default:\n        setClasses('col-xl-4 col-lg-4 col-md-3 col-sm-6 col-6');\n    }\n  }\n\n  useEffect(() => {\n    getProduct();\n    handleSetColumns();\n  }, [columns, collectionSlug, pageSize]); // Views\n\n  let productItemsView;\n\n  if (!loading && productItems) {\n    if (productItems.length > 0) {\n      const items = productItems.map(item => {\n        return /*#__PURE__*/_jsx(\"div\", {\n          className: classes,\n          children: /*#__PURE__*/_jsx(Product, {\n            product: item\n          })\n        }, item.id);\n      });\n      productItemsView = /*#__PURE__*/_jsx(\"div\", {\n        className: \"row\",\n        children: items\n      });\n    } else {\n      productItemsView = /*#__PURE__*/_jsx(\"p\", {\n        children: \"No product(s) found.\"\n      });\n    }\n  } else {\n    const skeletonItems = generateTempArray(columns * 2).map(item => /*#__PURE__*/_jsx(\"div\", {\n      className: classes,\n      children: /*#__PURE__*/_jsx(SkeletonProduct, {})\n    }, item));\n    productItemsView = /*#__PURE__*/_jsx(\"div\", {\n      className: \"row\",\n      children: skeletonItems\n    });\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"ps-shop-items\",\n    children: productItemsView\n  });\n};\n\nexport default ProductGroupGridItems;","map":null,"metadata":{},"sourceType":"module"}